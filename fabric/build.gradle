apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "com.modrinth.minotaur"
apply plugin: "net.darkhax.curseforgegradle"

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileOnly.extendsFrom common
    runtimeOnly.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi("com.terraformersmc:modmenu:${rootProject.modmenu_version}")
    modCompileOnly("maven.modrinth:dynamiccrosshair:${rootProject.dynamiccrosshair_version_fabric}")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    print(project.version)
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set("dev-shadow")
}

remapJar {
    injectAccessWidener = true
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set("release")
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

modrinth {
    token = getModrinthToken()
    projectId = "bridging-mod"
    versionNumber = project.version
    versionType = "release"
    uploadFile = remapJar
    gameVersions = [ "" ]
    loaders = [ "fabric", "quilt" ]

    dependencies {
        required.project "fabric-api"
        required.project "cloth-config"
    }
}