plugins {
	id 'fabric-loom' version '1.2.7'
	id 'maven-publish'
}

String targetVersion = project.properties["mod_version"] == null || project.properties["mod_version"].toString().length() == 0
		? "-indev"
		:"-v" + project.properties["mod_version"].toString()
project.setVersion(project.properties["minecraft_version"] + targetVersion)

loom {
	accessWidenerPath = file("src/main/resources/bridgingmod.accesswidener")

	runs {
		client {
			runDir "run/client"
		}

		server {
			runDir "run/server"
		}
	}
}

repositories {
	// Mappings
	maven {
		name = 'ParchmentMC'
		url = "https://maven.parchmentmc.org/"
	}

	// Mod Deps
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()

		if(project.parchment_version != "")
			parchment("org.parchmentmc.data:${project.parchment_version}@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	HashMap modifiedSrc = new HashMap<>(project.properties)
	modifiedSrc.put("mod_id", project.properties["archives_base_name"].toString().toLowerCase())

	filesMatching("fabric.mod.json") {
		expand modifiedSrc
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release.set(targetJavaVersion)
	}

	// Shows details related to the xlint "unchecked" and "derecation" warning notes.
	if(project.properties["show_dev_warnings"] == "true") {
		it.options.deprecation = true
		it.options.compilerArgs << '-Xlint:unchecked'
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}

	archivesBaseName = project.archives_base_name

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE.md") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}


tasks.register('updateDocTemplates', Copy) {
	group = "mod-utils"
	description = "Takes documents from a folder, expands any template variables, and then copies them to the root."
	doNotTrackState("Stops gradle from screaming - It doesn't let files get copied to the root if tracking state.")

	HashMap modifiedSrc = new HashMap<>(project.properties)

	from "/template_docs"

	into "/"
	include "**"
	exclude "media/**"

	expand modifiedSrc
}
